from datetime import datetime, timedelta
from elasticsearch import Elasticsearch
from elasticsearch.helpers import scan
import re

def detect_exploitation(es, index):
    # Define the time frame for detection (e.g., last 2 hours)
    now = datetime.now()
    two_hours_ago = now - timedelta(hours=2)

    # Define the query for detecting SQL injection attempts
    query = {
        "query": {
            "bool": {
                "must": [
                    {"range": {"@timestamp": {"gte": two_hours_ago, "lte": now}}}
                ],
                "should": [
                    {"match_phrase": {"log.file.path": "/var/log/auth.log"}},
                    {"match_phrase": {"message": "TEST"}}
                ]
            }
        }
    }

    # Process the results
    exploit_attempts = {}
    for hit in scan(es, index=index, query=query, scroll='2m', size=100):
        message = hit['_source']['message']
        timestamp = datetime.strptime(hit['_source']['@timestamp'], '%Y-%m-%dT%H:%M:%S.%fZ')

        if "sql injection attempt" in message:
            ip_match = re.search(r"(\d{1,3}\.){3}\d{1,3}", message)
            if ip_match:
                ip_address = ip_match.group(0)
                if ip_address not in exploit_attempts:
                    exploit_attempts[ip_address] = 0
                exploit_attempts[ip_address] += 1
                print("SQL injection attempts found:")
                print(ip_address)

    return exploit_attempts
